#!groovy
properties([
    parameters ([
        string(
            name: "VERSION",
            defaultValue: "",
            description: "Release candidate version tag"
        ),
        string(
            name: "BRANCH",
            defaultValue: "",
            description: "Specify the GitHub branch from which the image will be built"
        )
    ])
])

node {

    load "$JENKINS_HOME/jobvars.env"

    dir('src/github.com/reportportal/service-ui') {

        stage('Checkout') {
            checkout scm
        }

        stage('Build Docker Image') {
            withEnv(["NODE_OPTIONS=--max_old_space_size=4096", "AWS_URI=${AWS_URI}"]) {
                sh 'make IMAGE_NAME=$AWS_URI/service-ui:$VERSION-RC-$BUILD_NUMBER build-image-dev v=$VERSION-RC-$BUILD_NUMBER'
            }
        }

        stage('Push to ECR') {
            withEnv(["AWS_URI=${AWS_URI}", "AWS_REGION=${AWS_REGION}", "TAG=${VERSION}"]) {
                def image = env.AWS_URI + '/service-ui:' + env.TAG + '-RC-' + env.BUILD_NUMBER
                def url = 'https://' + env.AWS_URI
                def credentials = 'ecr:' + env.AWS_REGION + ':aws_credentials'

                docker.withRegistry(url, credentials) {
                    docker.image(image).push()
                }
            }
        }

        stage('Cleanup') {
            withEnv(["AWS_URI=${AWS_URI}"]) {
                sh 'docker rmi $AWS_URI/service-ui:$VERSION-RC-$BUILD_NUMBER && docker image prune -f'
            }
        }
    }
}
